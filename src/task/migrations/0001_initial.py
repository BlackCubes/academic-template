# Generated by Django 5.1.3 on 2024-11-20 20:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, error_messages={'unique': 'The UUID is not unique'}, unique=True)),
                ('title', models.CharField(error_messages={'blank': 'The title cannot be empty', 'invalid': 'Invalid value for the title', 'max_length': 'The title should not exceed 50 characters', 'null': 'The title cannot be empty', 'required': 'The title is required'}, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, error_messages={'unique': 'The UUID is not unique'}, unique=True)),
                ('title', models.CharField(error_messages={'blank': 'The title cannot be empty', 'invalid': 'Invalid value for the title', 'max_length': 'The title should not exceed 50 characters', 'null': 'The title cannot be empty', 'required': 'The title is required'}, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, error_messages={'unique': 'The UUID is not unique'}, unique=True)),
                ('title', models.CharField(error_messages={'blank': 'The title cannot be empty', 'invalid': 'Invalid value for the title', 'max_length': 'The title should not exceed 100 characters', 'null': 'The title cannot be empty', 'required': 'The title is required'}, max_length=100)),
                ('description', models.TextField(blank=True, error_messages={'invalid': 'Invalid value for description', 'max_length': 'The description must not exceed 500 characters'}, max_length=500, null=True)),
                ('points', models.PositiveIntegerField(default=0, error_messages={'blank': 'The points cannot be empty', 'invalid': 'Invalid value for points', 'min_value': 'The points should be more than 0', 'required': 'The points is required'}, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('expected_at', models.DateTimeField(default=django.utils.timezone.now, error_messages={'blank': 'The expected date cannot be empty', 'invalid': 'Invalid UTC datetime value for the expected date', 'invalid_date': 'Invalid date value for the expected date', 'invalid_datetime': 'Invalid UTC datetime value for the expected date', 'null': 'The expected date cannot be empty', 'required': 'The expected date is required'})),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('group', models.ForeignKey(error_messages={'blank': 'The group cannot be empty', 'does_not_exist': 'The group does not exist', 'invalid': 'Invalid value for the group', 'null': 'The group cannot be empty', 'required': 'The group is required'}, on_delete=django.db.models.deletion.CASCADE, related_name='task_group', to='task.type')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, error_messages={'unique': 'The UUID is not unique'}, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(error_messages={'blank': 'The category cannot be empty', 'does_not_exist': 'The category does not exist', 'invalid': 'Invalid value for the category', 'null': 'The category cannot be empty', 'required': 'The category is required'}, on_delete=django.db.models.deletion.CASCADE, related_name='group_category', to='task.category')),
                ('type', models.ForeignKey(error_messages={'blank': 'The type cannot be empty', 'does_not_exist': 'The type does not exist', 'invalid': 'Invalid value for the type', 'null': 'The type cannot be empty', 'required': 'The type is required'}, on_delete=django.db.models.deletion.CASCADE, related_name='group_type', to='task.type')),
            ],
        ),
    ]
